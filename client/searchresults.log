import { Component, OnInit } from '@angular/core';
import {StartService} from "../_services/start.service";
import {GameInfo} from "../_models/gameInfo";

@Component({
  selector: 'app-start',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.scss']
})
export class HomeComponent implements OnInit {

  gameList: GameInfo[];


  constructor(private startService: StartService,

  ) { }

  ngOnInit() {
    this.getGameList()
  }

  private getGameList() {
    this.startService.getGameList().subscribe(list => this.gameList = list);
  }

  createNewGame(){
    this.startService.createNewGame().subscribe(newGame => console.log(newGame.id));
  }
}
tree bf19a3e35ed6c2fb1569ea2f289dcbf991e27fda

app-routing.module.spec.ts
app-routing.module.ts
app.component.html
app.component.scss
app.component.spec.ts
app.component.ts
app.module.ts
board/
cell.ts
color.ts
messages/
piece.ts
services/
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import {AuthComponent} from "./login.component";
import {AuthRoutingModule} from "./login-routing.module";
@NgModule({
  imports: [
    CommonModule,
    AuthRoutingModule
  ],
  declarations: [
      AuthComponent
  ]
})
export class AuthModule { }
import { async, ComponentFixture, TestBed } from '@angular/core/testing';

import { CellComponent } from './cell.component';

describe('CellComponent', () => {
  let component: CellComponent;
  let fixture: ComponentFixture<CellComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ CellComponent ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(CellComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });
});
client/node_modules/
client/.idea/
.idea
gitignore
client/python-helper/
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-cell',
  templateUrl: './cell.component.html',
  styleUrls: ['./cell.component.scss']
})
export class CellComponent implements OnInit {

  constructor() { }

  ngOnInit() {
  }

}
client/node_modules/
client/.idea/
.idea
.gitignore
client/python-helper/
import {RouterModule, Routes} from "@angular/router";
import {AuthComponent} from "./login.component";
import {NgModule} from "@angular/core";
import {AdminComponent} from "./admin/admin.component";


const routes: Routes = [
    {
        path: '', component: AuthComponent,
        children: []
    },
];

@NgModule({
    imports: [ RouterModule.forChild(routes) ],
    exports: [ RouterModule ]
})

export class AuthRoutingModule { }
import {Component, OnInit} from '@angular/core';
import {Cell} from '../cell';
import {BoardService} from '../board.service';
import {forkJoin} from 'rxjs';
import {map} from 'rxjs/operators';

@Component({
  selector: 'app-board',
  templateUrl: './board.component.html',
  styleUrls: ['./board.component.scss']
})
export class BoardComponent implements OnInit {
  selectedCell: Cell;
  move: Cell[];
  board: Cell[];

  constructor(private boardService: BoardService) { }

  ngOnInit() {
    this.getBoard();
    this.move = [];
   }

  onSelect(cell: Cell) {
      this.selectedCell = cell;
      console.log(this.move.length);
      this.makeMove();
  }

  makeMove(): void {
      if (this.move.length === 0) {
        this.move[0] = this.selectedCell;

      } else {
        this.move[1] = this.selectedCell;
        this.move[1].piece = this.move[0].piece;
        this.move[0].piece = null;

        /*TODO: uptade only changed cells*/
        this.boardService.updateCell(this.move[0]).subscribe(cell => this.updateCellLocal(cell));
        this.boardService.updateCell(this.move[1]).subscribe(cell => this.updateCellLocal(cell));

        /*this.boardService.makeMove(this.move[0], this.move[1]);
        let changes$;
        changes$ = forkJoin(
          this.boardService.updateCell(this.move[0]),
          this.boardService.updateCell(this.move[1])
        ).pipe(
          map(([first, second]) => {this.getBoard();})
        );*/
          this.move = [];
      }
  }

  updateCellLocal(cell: Cell){
      this.board[cell.id - 1] = cell;
  }

  getBoard(): void {
    this.boardService.getBoard()
    .subscribe(board => this.board = board);
  }
}

commit 1f579ab2ec0f10276250add71966fea71a6db228
Merge: 116e7f9 4a63783
Author: tlpchk <max.telepchuk@gmail.com>
Date:   Thu Nov 15 12:11:03 2018 +0100

    On frontend: Uncommitted changes before Merge at 11/15/18 12:11 PM

diff --cc client/src/app/app.module.ts
index a8c99f8,a8c99f8..34ea274
--- a/client/src/app/app.module.ts
+++ b/client/src/app/app.module.ts
@@@ -21,9 -21,9 +21,9 @@@ import {StartComponent} from "./start/s
        // The HttpClientInMemoryWebApiModule module intercepts HTTP requests
        // and returns simulated server responses.
        // Remove it when a real server is ready to receive requests.
--      HttpClientInMemoryWebApiModule.forRoot(
++      /*HttpClientInMemoryWebApiModule.forRoot(
            InMemoryDataService, { dataEncapsulation: false }
--      )
++      )*/
    ],
      declarations: [
          AppComponent,
diff --cc client/src/app/board/board.component.html
index a8c24d2,a8c24d2..e2b416c
--- a/client/src/app/board/board.component.html
+++ b/client/src/app/board/board.component.html
@@@ -1,5 -1,5 +1,5 @@@
--<div class = "board">
--    <div *ngFor="let cell of board"
++<div *ngIf="this.board === null" class = "board">
++    <div  *ngFor="let cell of board"
           class = "cell {{cell.cell_color}}"
           [class.selected]="cell === selectedCell"
           [class.possible]="selectedCell !== null
diff --cc client/src/app/board/board.component.ts
index 9b85937,9b85937..9de5687
--- a/client/src/app/board/board.component.ts
+++ b/client/src/app/board/board.component.ts
@@@ -24,6 -24,6 +24,7 @@@ export class BoardComponent implements 
    onSelect(cell: Cell) {
        this.selectedCell = cell;
        this.makeMove();
++      console.log(JSON.stringify(this.board));
    }
  
    makeMove(): void {
@@@ -48,6 -48,6 +49,6 @@@
  
    getBoard(): void {
      this.boardService.getBoard()
--    .subscribe(board => this.board = board);
++    .subscribe(board => this.board = board)
    }
  }
diff --cc client/src/app/start/start.component.ts
index 1d2fe52,1d2fe52..21a4555
--- a/client/src/app/start/start.component.ts
+++ b/client/src/app/start/start.component.ts
@@@ -25,6 -25,6 +25,6 @@@ export class StartComponent implements 
    }
  
    createNewGame(){
--    this.startService.createNewGame().subscribe();
++    this.startService.createNewGame().subscribe(newGame => console.log(newGame.id));
    }
  }

tree d00f2d53393b2fcc1623cdae8e23c20e1b609fd2

board.component.html
board.component.scss
board.component.ts
client/node_modules/
<p> {{cell.id}} </p>
